<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jms="http://www.springframework.org/schema/jms"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-2.5.xsd">

	
	<context:component-scan base-package="apps.stockexchange.stockagent.services" />	
		
	<!-- A connection to ActiveMQ --> 
	<bean id="amqConnectionFactory" 
    	class="org.apache.activemq.ActiveMQConnectionFactory">    	
    	  <property name="brokerURL" value="tcp://localhost:61616" />     	
    </bean>

	<!-- A cached connection to wrap the ActiveMQ connection --> 
	<bean id="cachedConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
	 	<constructor-arg ref="amqConnectionFactory" />	  
	  	<property name="sessionCacheSize" value="10" />   
	</bean>
	
	
	<!-- a pooling based JMS provider ActiveMQConnectionFactory -->
	<!--   <bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory" destroy-method="stop">
	    <property name="connectionFactory">
	      <bean class="org.apache.activemq.ActiveMQConnectionFactory">
	        <property name="brokerURL">
	          <value>tcp://localhost:61616</value>
	        </property>
	      </bean>
	    </property>
	  </bean> -->
	
	
	<!-- Queues -->
	<bean id="orderQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="se.jms.queues.order" />
	</bean>

<!-- 	<bean id="orderReplyQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="se.jms.queues.orderReplyQueue" />
	</bean> -->


	<!-- PRODUCERS -->
	<bean id="jmsTemplateStockProducer" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="cachedConnectionFactory" />
		<property name="defaultDestination" ref="orderQueue" />
	</bean>	

				
	<!-- CONSUMER EVENT DRIVEN-->
	<bean id="stockAgentReplyListener" class="apps.stockexchange.stockagent.jms.StockAgentOrderOutcomeConsumer" /> 
			
	<jms:listener-container 
		destination-type="queue"		
		container-type="default" 
		connection-factory="cachedConnectionFactory" 		
		acknowledge="auto">			
		<jms:listener destination="se.jms.queues.orderReplyQueue" ref="stockAgentReplyListener" />			
	</jms:listener-container>
		
		
		
		<!-- CONSUMER WITH POLLING-->
		
		<!--
		<bean id="jmsTemplateStockReplyConsumer" class="org.springframework.jms.core.JmsTemplate"> 
			<property name="connectionFactory" ref="jmsConnectionFactory" />
			<property name="defaultDestination" ref="jmsQueueOrderReply" />
		</bean>
		
	
			
	 	<bean id="stockAgentOrderOutcomePoller" class="apps.stockexchange.stockagent.jms.StockAgentOrderOutcomePoller">
			<property name="destination" ref="jmsQueueOrderReply" />
			<property name="jmsTemplate" ref="jmsTemplateStockReplyConsumer" />
		</bean>  		
		-->
		
				
</beans>